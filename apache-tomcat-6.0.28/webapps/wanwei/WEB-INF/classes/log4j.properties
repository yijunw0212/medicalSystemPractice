log4j.rootLogger=DEBUG,consoleAppender,logfile
#log4j.logger.com.mythllink=DEBUG,consoleAppender,logfile
#log4j.logger.org.logicalcobwebs.proxool=DEBUG,consoleAppender,proxool_logfile
log4j.addivity.org.apache=true

#ConsoleAppender，控制台输出
#FileAppender，文件日志输出
#SMTPAppender，发邮件输出日志
#SocketAppender，Socket日志
#NTEventLogAppender，Window NT日志
#SyslogAppender，
#JMSAppender，
#AsyncAppender，
#NullAppender

########################ConversionPattern#############################
# 这里需要说明的就是日志信息格式中几个符号所代表的含义： 
#　　 －X号: X信息输出时左对齐； 
#  %p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL, 
#  %d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921 
#  %r: 输出自应用启动到输出该log信息耗费的毫秒数 
#  %c: 输出日志信息所属的类目，通常就是所在类的全名 
#  %t: 输出产生该日志事件的线程名 
#  %l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10) 
#  %x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。 
#  %%: 输出一个"%"字符 
#  %F: 输出日志消息产生时所在的文件名称 
#  %L: 输出代码中的行号 
#  %m: 输出代码中指定的消息,产生的日志具体信息 
#  %n: 输出一个回车换行符，Windows平台为" \r\n"，Unix平台为"\n" 
#
#  可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如： 
#  1)%20c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐。 
#  2)%-20c:指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，"-"号指定左对齐。 
#  3)%.30c:指定输出category的名称，最大的宽度是30，如果category的名称大于30的话，就会将左边多出的字符截掉，但小于30的话也不会有空格。 
#  4)%20.30c:如果category的名称小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边交远销出的字符截掉 
#######################################################################
#控制台输出：
log4j.appender.consoleAppender = org.apache.log4j.ConsoleAppender
log4j.appender.consoleAppender.Threshold = DEBUG
log4j.appender.consoleAppender.layout = org.apache.log4j.PatternLayout
log4j.appender.consoleAppender.layout.ConversionPattern =%d %-5p %m %n
log4j.appender.consoleAppender.ImmediateFlush = true

# 直接输出，不进行缓存 
# 默认是System.out方式输出 
log4j.appender.consoleAppender.Target = System.out

#文件输出：RollingFileAppender
log4j.appender.logfile = org.apache.log4j.RollingFileAppender
# 输出以上的INFO信息  Threshold=INFO:指定日志消息的输出最低层次
log4j.appender.logfile.Threshold = DEBUG  
#保存log文件路径 
log4j.appender.logfile.File = ${user.dir}/../wanwei_log/wanwei.log
# 默认为true，添加到末尾，false在每次启动时进行覆盖 
log4j.appender.logfile.Append = true  
# 一个log文件的大小，超过这个大小就又会生成1个日志 # KB ，MB，GB 
log4j.appender.logfile.MaxFileSize = 1MB 
# 最多保存3个文件备份 
log4j.appender.logfile.MaxBackupIndex = 3
# 输出文件的格式 
log4j.appender.logfile.layout = org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern =%d %-5p %c %m %n
#是否显示类名和行数
log4j.appender.logfile.layout.LocationInfo = true 

#文件输出：RollingFileAppender
log4j.appender.proxool_logfile = org.apache.log4j.RollingFileAppender
# 输出以上的INFO信息  Threshold=INFO:指定日志消息的输出最低层次
log4j.appender.proxool_logfile.Threshold = DEBUG  
#保存log文件路径 
log4j.appender.proxool_logfile.File = ${user.dir}/../wanwei_log/proxool_logfile.log
# 默认为true，添加到末尾，false在每次启动时进行覆盖 
log4j.appender.proxool_logfile.Append = true  
# 一个log文件的大小，超过这个大小就又会生成1个日志 # KB ，MB，GB 
log4j.appender.proxool_logfile.MaxFileSize = 1MB
# 最多保存3个文件备份 
log4j.appender.proxool_logfile.MaxBackupIndex = 1
# 输出文件的格式 
log4j.appender.proxool_logfile.layout = org.apache.log4j.PatternLayout
log4j.appender.proxool_logfile.layout.ConversionPattern =%d %-5p %c %m %n
#是否显示类名和行数
log4j.appender.proxool_logfile.layout.LocationInfo = true 

############################## SampleLayout ####################################
# log4j.appender.logfile.layout = org.apache.log4j.SampleLayout
############################## PatternLayout ###################################
# log4j.appender.logfile.layout = org.apache.log4j.PatternLayout
# log4j.appender.logfile.layout.ConversionPattern =% d % p [ % c] - % m % n % d
############################## XMLLayout #######################################
# log4j.appender.logfile.layout = org.apache.log4j.XMLLayout
# log4j.appender.logfile.layout.LocationInfo = true #æ¯å¦æ¾ç¤ºç±»ååè¡æ°
############################## TTCCLayout ######################################
# log4j.appender.logfile.layout = org.apache.log4j.TTCCLayout
# log4j.appender.logfile.layout.DateFormat = ISO8601
#NULL, RELATIVE, ABSOLUTE, DATE or ISO8601.
# log4j.appender.logfile.layout.TimeZoneID = GMT - 8 : 00 
# log4j.appender.logfile.layout.CategoryPrefixing = false ##é»è®¤ä¸ºtrue æå°ç±»å«å
# log4j.appender.logfile.layout.ContextPrinting = false ##é»è®¤ä¸ºtrue æå°ä¸ä¸æä¿¡æ¯
# log4j.appender.logfile.layout.ThreadPrinting = false ##é»è®¤ä¸ºtrue æå°çº¿ç¨å
###############################################################################
#æ¯å¤©æä»¶çè¾åºï¼DailyRollingFileAppender
#log4j.rootLogger = INFO,errorlogfile
#log4j.appender.errorlogfile = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.errorlogfile.Threshold = ERROR
#log4j.appender.errorlogfile.File = ../logs/ERROR_log
#é»è®¤ä¸ºtrueï¼æ·»å å°æ«å°¾ï¼falseå¨æ¯æ¬¡å¯å¨æ¶è¿è¡è¦ç
#log4j.appender.errorlogfile.Append = true 
#ç´æ¥è¾åºï¼ä¸è¿è¡ç¼å­
#log4j.appender.errorlogfile.ImmediateFlush = true  
#æä»¶åç§°çæ ¼å¼
# ' . ' yyyy - MM: æ¯ä¸ªææ´æ°ä¸ä¸ªlogæ¥å¿
# ' . ' yyyy - ww: æ¯ä¸ªæææ´æ°ä¸ä¸ªlogæ¥å¿
# ' . ' yyyy - MM - dd: æ¯å¤©æ´æ°ä¸ä¸ªlogæ¥å¿
# ' . ' yyyy - MM - dd - a: æ¯å¤©çåå¤åæ­£åæ´æ°ä¸ä¸ªlogæ¥å¿
# ' . ' yyyy - MM - dd - HH: æ¯å°æ¶æ´æ°ä¸ä¸ªlogæ¥å¿
# ' . ' yyyy - MM - dd - HH - mm: æ¯åéæ´æ°ä¸ä¸ªlogæ¥å¿
#log4j.appender.errorlogfile.DatePattern = '.'yyyy-MM-dd'.log' 
#log4j.appender.errorlogfile.layout = org.apache.log4j.PatternLayout
#log4j.appender.errorlogfile.layout.ConversionPattern =%d %p [ %c] - %m %n %d

#åéé®ä»¶ï¼SMTPAppender
#log4j.rootLogger = INFO,MAIL
#log4j.appender.MAIL = org.apache.log4j.net.SMTPAppender
#log4j.appender.MAIL.Threshold = INFO
#log4j.appender.MAIL.BufferSize = 10
#log4j.appender.MAIL.From = yourmail@gmail.com
#log4j.appender.MAIL.SMTPHost = smtp.gmail.com
#log4j.appender.MAIL.Subject = Log4J Message
#log4j.appender.MAIL.To = yourmail@gmail.com
#log4j.appender.MAIL.layout = org.apache.log4j.PatternLayout
#log4j.appender.MAIL.layout.ConversionPattern =%d - %c -%-4r [%t] %-5p %c %x - %m %n

#æ°æ®åºï¼JDBCAppender
#log4j.appender.DATABASE = org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.DATABASE.URL = jdbc:oracle:thin:@ 210.51 . 173.94 : 1521 :YDB
#log4j.appender.DATABASE.driver = oracle.jdbc.driver.OracleDriver
#log4j.appender.DATABASE.user = ydbuser
#log4j.appender.DATABASE.password = ydbuser
#log4j.appender.DATABASE.sql = INSERT INTO A1 (TITLE3) VALUES ( ' %d - %c %-5p %c %x - %m%n ' )
#log4j.appender.DATABASE.layout = org.apache.log4j.PatternLayout
#log4j.appender.DATABASE.layout.ConversionPattern =% d - % c -%- 4r [ % t] %- 5p % c % x - % m % n